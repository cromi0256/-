{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1r59uAnramtc6chtZDdgLz7nsx9Uv6qNu",
      "authorship_tag": "ABX9TyNuc47lmerK1qun7HulNqgC",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/cromi0256/Study01/blob/main/Day3\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#3장 데이터프레임\n",
        "pandas의 2차원 데이터 자료구조"
      ],
      "metadata": {
        "id": "-H8SddgRNiZ-"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 235
        },
        "id": "YXTzyNHkNfYn",
        "outputId": "c38d2c3d-e7db-4c36-ba8a-1cdc0499dc49"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  alphabets  numbers  booleans\n",
              "0         a      1.0      True\n",
              "1         b      2.0     False\n",
              "2         c      3.0      True\n",
              "3         d      NaN      True\n",
              "4         e      5.0     False\n",
              "5         f      6.0     False"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-212779b5-d44f-4933-b5db-e9f1b310720f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>alphabets</th>\n",
              "      <th>numbers</th>\n",
              "      <th>booleans</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>a</td>\n",
              "      <td>1.0</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>b</td>\n",
              "      <td>2.0</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>c</td>\n",
              "      <td>3.0</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>d</td>\n",
              "      <td>NaN</td>\n",
              "      <td>True</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>e</td>\n",
              "      <td>5.0</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>f</td>\n",
              "      <td>6.0</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-212779b5-d44f-4933-b5db-e9f1b310720f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-212779b5-d44f-4933-b5db-e9f1b310720f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-212779b5-d44f-4933-b5db-e9f1b310720f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e791273f-600e-49bc-8fdb-0a683cc5e002\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e791273f-600e-49bc-8fdb-0a683cc5e002')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e791273f-600e-49bc-8fdb-0a683cc5e002 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_18167d22-6cd4-46f6-ab01-28f70a9e6c55\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_18167d22-6cd4-46f6-ab01-28f70a9e6c55 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df1');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"alphabets\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"a\",\n          \"b\",\n          \"f\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"numbers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.0736441353327724,\n        \"min\": 1.0,\n        \"max\": 6.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.0,\n          6.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"booleans\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ],
      "source": [
        "#3-1 데이터프레임 만들기\n",
        "import pandas as pd #판다스 불러오기\n",
        "data1={'alphabets':['a','b','c','d','e','f'],\n",
        "      'numbers':[1,2,3,None,5,6],\n",
        "      'booleans':[True,False,True,True,False,False]}\n",
        "df1=pd.DataFrame(data1)\n",
        "df1 #딕셔너리 이용"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data2=[['k','l','m','n','x','y'],[2,4,6,8,10,12],[0.9,0.8,0.7,0.6,0.5,0.4]]\n",
        "df2=pd.DataFrame(data2)\n",
        "print(df2,'\\n')\n",
        "\n",
        "df2t=df2.T\n",
        "df2t.columns=['alphabets','numbers','floats']\n",
        "print(df2t) #2차원 리스트 이용 + 컬럼리스트 이용"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DLW_zm68ORex",
        "outputId": "1e72185c-2608-4bce-abf6-92d527afc4a3"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     0    1    2    3    4    5\n",
            "0    k    l    m    n    x    y\n",
            "1    2    4    6    8   10   12\n",
            "2  0.9  0.8  0.7  0.6  0.5  0.4 \n",
            "\n",
            "  alphabets numbers floats\n",
            "0         k       2    0.9\n",
            "1         l       4    0.8\n",
            "2         m       6    0.7\n",
            "3         n       8    0.6\n",
            "4         x      10    0.5\n",
            "5         y      12    0.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#3-2 저장하기 불러오기\n",
        "df1.to_csv('df_sample.csv',index=False)\n",
        "df1.to_excel('df_sample.xlsx',index=False)\n",
        "df2t.to_json('df_sample.json')"
      ],
      "metadata": {
        "id": "ADMOzP8OO-rK"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "csv=pd.read_csv('df_sample.csv')\n",
        "excel=pd.read_excel('df_sample.xlsx')\n",
        "json=pd.read_json('df_sample.json')\n",
        "print(csv,'\\n')\n",
        "print(excel,'\\n')\n",
        "print(json,'\\n')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gFsfAFPcQusP",
        "outputId": "4169122f-1a81-4e0c-8766-689b2063fef4"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "  alphabets  numbers  booleans\n",
            "0         a      1.0      True\n",
            "1         b      2.0     False\n",
            "2         c      3.0      True\n",
            "3         d      NaN      True\n",
            "4         e      5.0     False\n",
            "5         f      6.0     False \n",
            "\n",
            "  alphabets  numbers  booleans\n",
            "0         a      1.0      True\n",
            "1         b      2.0     False\n",
            "2         c      3.0      True\n",
            "3         d      NaN      True\n",
            "4         e      5.0     False\n",
            "5         f      6.0     False \n",
            "\n",
            "  alphabets  numbers  floats\n",
            "0         k        2     0.9\n",
            "1         l        4     0.8\n",
            "2         m        6     0.7\n",
            "3         n        8     0.6\n",
            "4         x       10     0.5\n",
            "5         y       12     0.4 \n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#데이터 추출하기\n",
        "df3=pd.read_csv('https://storage.googleapis.com/kagglesdsdata/competitions/3136/26502/train.csv?GoogleAccessId=web-data@kaggle-161607.iam.gserviceaccount.com&Expires=1736202741&Signature=Sq22wWJIxF%2BrjqpVwbd9LXlAp9b3detcoYmtsA1WjUcYY1i1%2Fc%2BfQCVY2YUJld42pGYuKup%2F0o3UTaGGWw0PHU4bYid%2F90QmR7KBtnh9ch7QYR8rew9eIiIFkAhp5vOr8z7VyS0IFppVbm6zMgmgJ181wxJ6Z4JCnnVEMZbGNH3DtzJobagL4FppT%2Bhqv2gVJfAOxpiPrr%2FLbRllP79leZUghiYGpVd9rXKsnglwwQqPx5rA%2Bv3lupDdJFUrDH0JLBW%2B7MOV23SUVRRy9G%2BBq0tzevsby9eb84gJePygq5IsHCyjYcoRgwvBLVC5DAvrXFp8aiNPIsg1bSH7JfD%2BoQ%3D%3D&response-content-disposition=attachment%3B+filename%3Dtrain.csv')  #외부데이터\n",
        "print(df3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_cRDvAwGRAiL",
        "outputId": "7590c560-c287-491f-cfba-6e3e48a2ca4d"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     PassengerId  Survived  Pclass  \\\n",
            "0              1         0       3   \n",
            "1              2         1       1   \n",
            "2              3         1       3   \n",
            "3              4         1       1   \n",
            "4              5         0       3   \n",
            "..           ...       ...     ...   \n",
            "886          887         0       2   \n",
            "887          888         1       1   \n",
            "888          889         0       3   \n",
            "889          890         1       1   \n",
            "890          891         0       3   \n",
            "\n",
            "                                                  Name     Sex   Age  SibSp  \\\n",
            "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
            "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
            "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
            "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
            "4                             Allen, Mr. William Henry    male  35.0      0   \n",
            "..                                                 ...     ...   ...    ...   \n",
            "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
            "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
            "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
            "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
            "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
            "\n",
            "     Parch            Ticket     Fare Cabin Embarked  \n",
            "0        0         A/5 21171   7.2500   NaN        S  \n",
            "1        0          PC 17599  71.2833   C85        C  \n",
            "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
            "3        0            113803  53.1000  C123        S  \n",
            "4        0            373450   8.0500   NaN        S  \n",
            "..     ...               ...      ...   ...      ...  \n",
            "886      0            211536  13.0000   NaN        S  \n",
            "887      0            112053  30.0000   B42        S  \n",
            "888      2        W./C. 6607  23.4500   NaN        S  \n",
            "889      0            111369  30.0000  C148        C  \n",
            "890      0            370376   7.7500   NaN        Q  \n",
            "\n",
            "[891 rows x 12 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3.info()) #기본정보"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "t99f9yQ4SZgl",
        "outputId": "25c0f3dd-9f4c-4340-d97d-1d52927a5ef7"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 891 entries, 0 to 890\n",
            "Data columns (total 12 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   PassengerId  891 non-null    int64  \n",
            " 1   Survived     891 non-null    int64  \n",
            " 2   Pclass       891 non-null    int64  \n",
            " 3   Name         891 non-null    object \n",
            " 4   Sex          891 non-null    object \n",
            " 5   Age          714 non-null    float64\n",
            " 6   SibSp        891 non-null    int64  \n",
            " 7   Parch        891 non-null    int64  \n",
            " 8   Ticket       891 non-null    object \n",
            " 9   Fare         891 non-null    float64\n",
            " 10  Cabin        204 non-null    object \n",
            " 11  Embarked     889 non-null    object \n",
            "dtypes: float64(2), int64(5), object(5)\n",
            "memory usage: 83.7+ KB\n",
            "None\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3.columns,'\\n',df3.index) #feature, index확인"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z72qJ0OcTdN8",
        "outputId": "ef93ebbe-1d20-4a8e-a601-ec70ca3a122f"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
            "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n",
            "      dtype='object') \n",
            " RangeIndex(start=0, stop=891, step=1)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3.shape)\n",
        "print(df3.size) #None포함\n",
        "print(df3.dtypes)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cicANaL5T0Vj",
        "outputId": "08a061a2-760b-45b5-f7d0-84b5306c19f2"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(891, 12)\n",
            "10692\n",
            "PassengerId      int64\n",
            "Survived         int64\n",
            "Pclass           int64\n",
            "Name            object\n",
            "Sex             object\n",
            "Age            float64\n",
            "SibSp            int64\n",
            "Parch            int64\n",
            "Ticket          object\n",
            "Fare           float64\n",
            "Cabin           object\n",
            "Embarked        object\n",
            "dtype: object\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3.describe().round(1))  #숫자형\n",
        "print(df3.describe(include=['object'])) #문자형"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AR15e0uxUUud",
        "outputId": "0ab24d8e-dfa2-4c33-fa8f-b7f89b85b20e"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       PassengerId  Survived  Pclass    Age  SibSp  Parch   Fare\n",
            "count        891.0     891.0   891.0  714.0  891.0  891.0  891.0\n",
            "mean         446.0       0.4     2.3   29.7    0.5    0.4   32.2\n",
            "std          257.4       0.5     0.8   14.5    1.1    0.8   49.7\n",
            "min            1.0       0.0     1.0    0.4    0.0    0.0    0.0\n",
            "25%          223.5       0.0     2.0   20.1    0.0    0.0    7.9\n",
            "50%          446.0       0.0     3.0   28.0    0.0    0.0   14.5\n",
            "75%          668.5       1.0     3.0   38.0    1.0    0.0   31.0\n",
            "max          891.0       1.0     3.0   80.0    8.0    6.0  512.3\n",
            "                           Name   Sex  Ticket    Cabin Embarked\n",
            "count                       891   891     891      204      889\n",
            "unique                      891     2     681      147        3\n",
            "top     Braund, Mr. Owen Harris  male  347082  B96 B98        S\n",
            "freq                          1   577       7        4      644\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#컬럼을 사용한 추출\n",
        "print(df3.Survived)\n",
        "print(df3[['Pclass','Age']])\n",
        "print(df3.filter(['PassengerId','Survived']))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k1xWHa-HUgvR",
        "outputId": "0538643a-807d-4ef0-b08f-22b3b1db8001"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0      0\n",
            "1      1\n",
            "2      1\n",
            "3      1\n",
            "4      0\n",
            "      ..\n",
            "886    0\n",
            "887    1\n",
            "888    0\n",
            "889    1\n",
            "890    0\n",
            "Name: Survived, Length: 891, dtype: int64\n",
            "     Pclass   Age\n",
            "0         3  22.0\n",
            "1         1  38.0\n",
            "2         3  26.0\n",
            "3         1  35.0\n",
            "4         3  35.0\n",
            "..      ...   ...\n",
            "886       2  27.0\n",
            "887       1  19.0\n",
            "888       3   NaN\n",
            "889       1  26.0\n",
            "890       3  32.0\n",
            "\n",
            "[891 rows x 2 columns]\n",
            "     PassengerId  Survived\n",
            "0              1         0\n",
            "1              2         1\n",
            "2              3         1\n",
            "3              4         1\n",
            "4              5         0\n",
            "..           ...       ...\n",
            "886          887         0\n",
            "887          888         1\n",
            "888          889         0\n",
            "889          890         1\n",
            "890          891         0\n",
            "\n",
            "[891 rows x 2 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#loc사용\n",
        "print(df3.loc[0,:],'\\n')  #0행 추출\n",
        "print(df3.loc[10:20,['PassengerId','Survived']]) #10~20행,id생존여부 추출\n",
        "print('loc은 범위 끝을 포함하므로 주의')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nu5slguBY0GV",
        "outputId": "9548ba68-bb67-40ef-be75-ca416358e3a7"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PassengerId                          1\n",
            "Survived                             0\n",
            "Pclass                               3\n",
            "Name           Braund, Mr. Owen Harris\n",
            "Sex                               male\n",
            "Age                               22.0\n",
            "SibSp                                1\n",
            "Parch                                0\n",
            "Ticket                       A/5 21171\n",
            "Fare                              7.25\n",
            "Cabin                              NaN\n",
            "Embarked                             S\n",
            "Name: 0, dtype: object \n",
            "\n",
            "    PassengerId  Survived\n",
            "10           11         1\n",
            "11           12         1\n",
            "12           13         0\n",
            "13           14         0\n",
            "14           15         0\n",
            "15           16         1\n",
            "16           17         0\n",
            "17           18         1\n",
            "18           19         0\n",
            "19           20         1\n",
            "20           21         0\n",
            "loc은 범위 끝을 포함하므로 주의\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#iloc사용\n",
        "print(df3.iloc[10:20,-3])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vWuRpnpDZioQ",
        "outputId": "83278db0-2fc4-4bfb-97ff-af7378cbf075"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10    16.7000\n",
            "11    26.5500\n",
            "12     8.0500\n",
            "13    31.2750\n",
            "14     7.8542\n",
            "15    16.0000\n",
            "16    29.1250\n",
            "17    13.0000\n",
            "18    18.0000\n",
            "19     7.2250\n",
            "Name: Fare, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#조건문 사용\n",
        "print(df3[df3.Survived==0]) #사망자 추출\n",
        "print(df3[(df3.Survived==0)&(df3.Sex=='female')]) #사망자 중 여성 추출(|:또는,&:그리고)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qUZIpsRRaGyr",
        "outputId": "15447dd7-c538-41b6-c1eb-f16e043e93b2"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     PassengerId  Survived  Pclass                                      Name  \\\n",
            "0              1         0       3                   Braund, Mr. Owen Harris   \n",
            "4              5         0       3                  Allen, Mr. William Henry   \n",
            "5              6         0       3                          Moran, Mr. James   \n",
            "6              7         0       1                   McCarthy, Mr. Timothy J   \n",
            "7              8         0       3            Palsson, Master. Gosta Leonard   \n",
            "..           ...       ...     ...                                       ...   \n",
            "884          885         0       3                    Sutehall, Mr. Henry Jr   \n",
            "885          886         0       3      Rice, Mrs. William (Margaret Norton)   \n",
            "886          887         0       2                     Montvila, Rev. Juozas   \n",
            "888          889         0       3  Johnston, Miss. Catherine Helen \"Carrie\"   \n",
            "890          891         0       3                       Dooley, Mr. Patrick   \n",
            "\n",
            "        Sex   Age  SibSp  Parch           Ticket     Fare Cabin Embarked  \n",
            "0      male  22.0      1      0        A/5 21171   7.2500   NaN        S  \n",
            "4      male  35.0      0      0           373450   8.0500   NaN        S  \n",
            "5      male   NaN      0      0           330877   8.4583   NaN        Q  \n",
            "6      male  54.0      0      0            17463  51.8625   E46        S  \n",
            "7      male   2.0      3      1           349909  21.0750   NaN        S  \n",
            "..      ...   ...    ...    ...              ...      ...   ...      ...  \n",
            "884    male  25.0      0      0  SOTON/OQ 392076   7.0500   NaN        S  \n",
            "885  female  39.0      0      5           382652  29.1250   NaN        Q  \n",
            "886    male  27.0      0      0           211536  13.0000   NaN        S  \n",
            "888  female   NaN      1      2       W./C. 6607  23.4500   NaN        S  \n",
            "890    male  32.0      0      0           370376   7.7500   NaN        Q  \n",
            "\n",
            "[549 rows x 12 columns]\n",
            "     PassengerId  Survived  Pclass  \\\n",
            "14            15         0       3   \n",
            "18            19         0       3   \n",
            "24            25         0       3   \n",
            "38            39         0       3   \n",
            "40            41         0       3   \n",
            "..           ...       ...     ...   \n",
            "854          855         0       2   \n",
            "863          864         0       3   \n",
            "882          883         0       3   \n",
            "885          886         0       3   \n",
            "888          889         0       3   \n",
            "\n",
            "                                                  Name     Sex   Age  SibSp  \\\n",
            "14                Vestrom, Miss. Hulda Amanda Adolfina  female  14.0      0   \n",
            "18   Vander Planke, Mrs. Julius (Emelia Maria Vande...  female  31.0      1   \n",
            "24                       Palsson, Miss. Torborg Danira  female   8.0      3   \n",
            "38                  Vander Planke, Miss. Augusta Maria  female  18.0      2   \n",
            "40      Ahlin, Mrs. Johan (Johanna Persdotter Larsson)  female  40.0      1   \n",
            "..                                                 ...     ...   ...    ...   \n",
            "854      Carter, Mrs. Ernest Courtenay (Lilian Hughes)  female  44.0      1   \n",
            "863                  Sage, Miss. Dorothy Edith \"Dolly\"  female   NaN      8   \n",
            "882                       Dahlberg, Miss. Gerda Ulrika  female  22.0      0   \n",
            "885               Rice, Mrs. William (Margaret Norton)  female  39.0      0   \n",
            "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
            "\n",
            "     Parch      Ticket     Fare Cabin Embarked  \n",
            "14       0      350406   7.8542   NaN        S  \n",
            "18       0      345763  18.0000   NaN        S  \n",
            "24       1      349909  21.0750   NaN        S  \n",
            "38       0      345764  18.0000   NaN        S  \n",
            "40       0        7546   9.4750   NaN        S  \n",
            "..     ...         ...      ...   ...      ...  \n",
            "854      0      244252  26.0000   NaN        S  \n",
            "863      2    CA. 2343  69.5500   NaN        S  \n",
            "882      0        7552  10.5167   NaN        S  \n",
            "885      5      382652  29.1250   NaN        Q  \n",
            "888      2  W./C. 6607  23.4500   NaN        S  \n",
            "\n",
            "[81 rows x 12 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3[df3['Pclass'].isin([2,3])])  #isin 특정한 값을 가지는지 비교"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q7RRcQkYaeK5",
        "outputId": "162ce99f-8549-47f8-ae07-43145301ad29"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     PassengerId  Survived  Pclass                                      Name  \\\n",
            "0              1         0       3                   Braund, Mr. Owen Harris   \n",
            "2              3         1       3                    Heikkinen, Miss. Laina   \n",
            "4              5         0       3                  Allen, Mr. William Henry   \n",
            "5              6         0       3                          Moran, Mr. James   \n",
            "7              8         0       3            Palsson, Master. Gosta Leonard   \n",
            "..           ...       ...     ...                                       ...   \n",
            "884          885         0       3                    Sutehall, Mr. Henry Jr   \n",
            "885          886         0       3      Rice, Mrs. William (Margaret Norton)   \n",
            "886          887         0       2                     Montvila, Rev. Juozas   \n",
            "888          889         0       3  Johnston, Miss. Catherine Helen \"Carrie\"   \n",
            "890          891         0       3                       Dooley, Mr. Patrick   \n",
            "\n",
            "        Sex   Age  SibSp  Parch            Ticket     Fare Cabin Embarked  \n",
            "0      male  22.0      1      0         A/5 21171   7.2500   NaN        S  \n",
            "2    female  26.0      0      0  STON/O2. 3101282   7.9250   NaN        S  \n",
            "4      male  35.0      0      0            373450   8.0500   NaN        S  \n",
            "5      male   NaN      0      0            330877   8.4583   NaN        Q  \n",
            "7      male   2.0      3      1            349909  21.0750   NaN        S  \n",
            "..      ...   ...    ...    ...               ...      ...   ...      ...  \n",
            "884    male  25.0      0      0   SOTON/OQ 392076   7.0500   NaN        S  \n",
            "885  female  39.0      0      5            382652  29.1250   NaN        Q  \n",
            "886    male  27.0      0      0            211536  13.0000   NaN        S  \n",
            "888  female   NaN      1      2        W./C. 6607  23.4500   NaN        S  \n",
            "890    male  32.0      0      0            370376   7.7500   NaN        Q  \n",
            "\n",
            "[675 rows x 12 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3[df3['Cabin'].isna()==False])  #결측치를 기준으로 추출"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XI3K3XU3a5A4",
        "outputId": "fa85bce4-349e-4574-fbaa-8893fa98f4e0"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     PassengerId  Survived  Pclass  \\\n",
            "1              2         1       1   \n",
            "3              4         1       1   \n",
            "6              7         0       1   \n",
            "10            11         1       3   \n",
            "11            12         1       1   \n",
            "..           ...       ...     ...   \n",
            "871          872         1       1   \n",
            "872          873         0       1   \n",
            "879          880         1       1   \n",
            "887          888         1       1   \n",
            "889          890         1       1   \n",
            "\n",
            "                                                  Name     Sex   Age  SibSp  \\\n",
            "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
            "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
            "6                              McCarthy, Mr. Timothy J    male  54.0      0   \n",
            "10                     Sandstrom, Miss. Marguerite Rut  female   4.0      1   \n",
            "11                            Bonnell, Miss. Elizabeth  female  58.0      0   \n",
            "..                                                 ...     ...   ...    ...   \n",
            "871   Beckwith, Mrs. Richard Leonard (Sallie Monypeny)  female  47.0      1   \n",
            "872                           Carlsson, Mr. Frans Olof    male  33.0      0   \n",
            "879      Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)  female  56.0      0   \n",
            "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
            "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
            "\n",
            "     Parch    Ticket     Fare        Cabin Embarked  \n",
            "1        0  PC 17599  71.2833          C85        C  \n",
            "3        0    113803  53.1000         C123        S  \n",
            "6        0     17463  51.8625          E46        S  \n",
            "10       1   PP 9549  16.7000           G6        S  \n",
            "11       0    113783  26.5500         C103        S  \n",
            "..     ...       ...      ...          ...      ...  \n",
            "871      1     11751  52.5542          D35        S  \n",
            "872      0       695   5.0000  B51 B53 B55        S  \n",
            "879      1     11767  83.1583          C50        C  \n",
            "887      0    112053  30.0000          B42        S  \n",
            "889      0    111369  30.0000         C148        C  \n",
            "\n",
            "[204 rows x 12 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df3[df3['Name'].str.contains('Thomas')])  #이름 중 Thomas를 가진 사람 추출"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TrrYZyHrbkSA",
        "outputId": "6b9c1a49-79a0-499d-d532-5b04316ec767"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "     PassengerId  Survived  Pclass  \\\n",
            "149          150         0       2   \n",
            "151          152         1       1   \n",
            "159          160         0       3   \n",
            "186          187         1       3   \n",
            "252          253         0       1   \n",
            "260          261         0       3   \n",
            "336          337         0       1   \n",
            "347          348         1       3   \n",
            "364          365         0       3   \n",
            "372          373         0       3   \n",
            "415          416         0       3   \n",
            "560          561         0       3   \n",
            "670          671         1       2   \n",
            "679          680         1       1   \n",
            "684          685         0       2   \n",
            "758          759         0       3   \n",
            "778          779         0       3   \n",
            "803          804         1       3   \n",
            "806          807         0       1   \n",
            "828          829         1       3   \n",
            "841          842         0       2   \n",
            "879          880         1       1   \n",
            "\n",
            "                                                  Name     Sex    Age  SibSp  \\\n",
            "149                  Byles, Rev. Thomas Roussel Davids    male  42.00      0   \n",
            "151                  Pears, Mrs. Thomas (Edith Wearne)  female  22.00      1   \n",
            "159                         Sage, Master. Thomas Henry    male    NaN      8   \n",
            "186    O'Brien, Mrs. Thomas (Johanna \"Hannah\" Godfrey)  female    NaN      1   \n",
            "252                          Stead, Mr. William Thomas    male  62.00      0   \n",
            "260                                  Smith, Mr. Thomas    male    NaN      0   \n",
            "336                          Pears, Mr. Thomas Clinton    male  29.00      1   \n",
            "347          Davison, Mrs. Thomas Henry (Mary E Finck)  female    NaN      1   \n",
            "364                                O'Brien, Mr. Thomas    male    NaN      1   \n",
            "372                         Beavan, Mr. William Thomas    male  19.00      0   \n",
            "415            Meek, Mrs. Thomas (Annie Louise Rowley)  female    NaN      0   \n",
            "560                           Morrow, Mr. Thomas Rowan    male    NaN      0   \n",
            "670  Brown, Mrs. Thomas William Solomon (Elizabeth ...  female  40.00      1   \n",
            "679                 Cardeza, Mr. Thomas Drake Martinez    male  36.00      0   \n",
            "684                  Brown, Mr. Thomas William Solomon    male  60.00      1   \n",
            "758                       Theobald, Mr. Thomas Leonard    male  34.00      0   \n",
            "778                            Kilgannon, Mr. Thomas J    male    NaN      0   \n",
            "803                    Thomas, Master. Assad Alexander    male   0.42      0   \n",
            "806                             Andrews, Mr. Thomas Jr    male  39.00      0   \n",
            "828                       McCormack, Mr. Thomas Joseph    male    NaN      0   \n",
            "841                           Mudd, Mr. Thomas Charles    male  16.00      0   \n",
            "879      Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)  female  56.00      0   \n",
            "\n",
            "     Parch       Ticket      Fare        Cabin Embarked  \n",
            "149      0       244310   13.0000          NaN        S  \n",
            "151      0       113776   66.6000           C2        S  \n",
            "159      2     CA. 2343   69.5500          NaN        S  \n",
            "186      0       370365   15.5000          NaN        Q  \n",
            "252      0       113514   26.5500          C87        S  \n",
            "260      0       384461    7.7500          NaN        Q  \n",
            "336      0       113776   66.6000           C2        S  \n",
            "347      0       386525   16.1000          NaN        S  \n",
            "364      0       370365   15.5000          NaN        Q  \n",
            "372      0       323951    8.0500          NaN        S  \n",
            "415      0       343095    8.0500          NaN        S  \n",
            "560      0       372622    7.7500          NaN        Q  \n",
            "670      1        29750   39.0000          NaN        S  \n",
            "679      1     PC 17755  512.3292  B51 B53 B55        C  \n",
            "684      1        29750   39.0000          NaN        S  \n",
            "758      0       363294    8.0500          NaN        S  \n",
            "778      0        36865    7.7375          NaN        Q  \n",
            "803      1         2625    8.5167          NaN        C  \n",
            "806      0       112050    0.0000          A36        S  \n",
            "828      0       367228    7.7500          NaN        Q  \n",
            "841      0  S.O./P.P. 3   10.5000          NaN        S  \n",
            "879      1        11767   83.1583          C50        C  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#앞,뒤 임의 추출 및 랜덤 샘플\n",
        "print(df3.head()) #기본값5\n",
        "print(df3.tail(3))\n",
        "print(df3.sample(7))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xJhpYcuDb98w",
        "outputId": "7cc4a438-d33d-4d1a-c52a-5a6c7dd8f5e4"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   PassengerId  Survived  Pclass  \\\n",
            "0            1         0       3   \n",
            "1            2         1       1   \n",
            "2            3         1       3   \n",
            "3            4         1       1   \n",
            "4            5         0       3   \n",
            "\n",
            "                                                Name     Sex   Age  SibSp  \\\n",
            "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
            "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
            "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
            "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
            "4                           Allen, Mr. William Henry    male  35.0      0   \n",
            "\n",
            "   Parch            Ticket     Fare Cabin Embarked  \n",
            "0      0         A/5 21171   7.2500   NaN        S  \n",
            "1      0          PC 17599  71.2833   C85        C  \n",
            "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
            "3      0            113803  53.1000  C123        S  \n",
            "4      0            373450   8.0500   NaN        S  \n",
            "     PassengerId  Survived  Pclass                                      Name  \\\n",
            "888          889         0       3  Johnston, Miss. Catherine Helen \"Carrie\"   \n",
            "889          890         1       1                     Behr, Mr. Karl Howell   \n",
            "890          891         0       3                       Dooley, Mr. Patrick   \n",
            "\n",
            "        Sex   Age  SibSp  Parch      Ticket   Fare Cabin Embarked  \n",
            "888  female   NaN      1      2  W./C. 6607  23.45   NaN        S  \n",
            "889    male  26.0      0      0      111369  30.00  C148        C  \n",
            "890    male  32.0      0      0      370376   7.75   NaN        Q  \n",
            "     PassengerId  Survived  Pclass  \\\n",
            "714          715         0       2   \n",
            "744          745         1       3   \n",
            "443          444         1       2   \n",
            "676          677         0       3   \n",
            "322          323         1       2   \n",
            "607          608         1       1   \n",
            "556          557         1       1   \n",
            "\n",
            "                                                  Name     Sex   Age  SibSp  \\\n",
            "714                              Greenberg, Mr. Samuel    male  52.0      0   \n",
            "744                                 Stranden, Mr. Juho    male  31.0      0   \n",
            "443                          Reynaldo, Ms. Encarnacion  female  28.0      0   \n",
            "676                      Sawyer, Mr. Frederick Charles    male  24.5      0   \n",
            "322                          Slayter, Miss. Hilda Mary  female  30.0      0   \n",
            "607                        Daniel, Mr. Robert Williams    male  27.0      0   \n",
            "556  Duff Gordon, Lady. (Lucille Christiana Sutherl...  female  48.0      1   \n",
            "\n",
            "     Parch             Ticket    Fare Cabin Embarked  \n",
            "714      0             250647  13.000   NaN        S  \n",
            "744      0  STON/O 2. 3101288   7.925   NaN        S  \n",
            "443      0             230434  13.000   NaN        S  \n",
            "676      0             342826   8.050   NaN        S  \n",
            "322      0             234818  12.350   NaN        Q  \n",
            "607      0             113804  30.500   NaN        S  \n",
            "556      0              11755  39.600   A16        C  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "qHZCDrugcctW"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}